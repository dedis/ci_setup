name: Build

on:
  push:
    branches: [ main ]
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:

  build-and-test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.platform}}

    steps:

    # setup GO
    - name: Set up Go ^1.19
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19
      id: go

    # checkout branch
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # go mod tidy
    - name: Tidy
      if: matrix.platform == 'ubuntu-latest'
      run: go mod tidy && [ -z "$(git status -s)" ]

    # linter
    - name: Lint
      if: matrix.platform == 'ubuntu-latest'
      run: make lint

    # go vet
    - name: Vet
      if: matrix.platform == 'ubuntu-latest'
      run: make vet

    # coverage
    - name: Test with coverage
      if: matrix.platform == 'ubuntu-latest'
      run: go test -json -covermode=count -coverprofile=profile.cov ./... > report.json

    # goverall coverage
    - name: Send coverage
      if: matrix.platform == 'ubuntu-latest'
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov
        parallel: true
        

  # notifies that all test jobs are finished.
  finish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
